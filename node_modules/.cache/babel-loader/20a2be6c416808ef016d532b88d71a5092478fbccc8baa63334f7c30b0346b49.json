{"ast":null,"code":"var _jsxFileName = \"/Users/heying/Desktop/Postman/src/components/UrlInput.js\";\nimport React from 'react';\nimport './UrlInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UrlInput = ({\n  url,\n  onChange,\n  baseHost\n}) => {\n  const getPlaceholder = () => {\n    if (baseHost) {\n      return `输入路径 (例如: /users) - 基础URL: ${baseHost}`;\n    }\n    return '输入完整URL (例如: https://api.example.com/users)';\n  };\n  const handleUrlChange = value => {\n    // 如果输入的是相对路径且设置了基础host，自动拼接\n    if (baseHost && value && !value.startsWith('http')) {\n      // 确保路径以/开头\n      const path = value.startsWith('/') ? value : `/${value}`;\n      onChange(`${baseHost}${path}`);\n    } else {\n      onChange(value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"url-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"url-input\",\n      placeholder: getPlaceholder(),\n      value: url,\n      onChange: e => handleUrlChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), baseHost && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"base-host-indicator\",\n      children: [\"\\u57FA\\u7840URL: \", baseHost]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = UrlInput;\nexport default UrlInput;\nvar _c;\n$RefreshReg$(_c, \"UrlInput\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","UrlInput","url","onChange","baseHost","getPlaceholder","handleUrlChange","value","startsWith","path","className","children","type","placeholder","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/heying/Desktop/Postman/src/components/UrlInput.js"],"sourcesContent":["import React from 'react';\nimport './UrlInput.css';\n\nconst UrlInput = ({ url, onChange, baseHost }) => {\n  const getPlaceholder = () => {\n    if (baseHost) {\n      return `输入路径 (例如: /users) - 基础URL: ${baseHost}`;\n    }\n    return '输入完整URL (例如: https://api.example.com/users)';\n  };\n\n  const handleUrlChange = (value) => {\n    // 如果输入的是相对路径且设置了基础host，自动拼接\n    if (baseHost && value && !value.startsWith('http')) {\n      // 确保路径以/开头\n      const path = value.startsWith('/') ? value : `/${value}`;\n      onChange(`${baseHost}${path}`);\n    } else {\n      onChange(value);\n    }\n  };\n\n  return (\n    <div className=\"url-input-container\">\n      <input\n        type=\"text\"\n        className=\"url-input\"\n        placeholder={getPlaceholder()}\n        value={url}\n        onChange={(e) => handleUrlChange(e.target.value)}\n      />\n      {baseHost && (\n        <div className=\"base-host-indicator\">\n          基础URL: {baseHost}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UrlInput; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,GAAG;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAChD,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAID,QAAQ,EAAE;MACZ,OAAO,8BAA8BA,QAAQ,EAAE;IACjD;IACA,OAAO,6CAA6C;EACtD,CAAC;EAED,MAAME,eAAe,GAAIC,KAAK,IAAK;IACjC;IACA,IAAIH,QAAQ,IAAIG,KAAK,IAAI,CAACA,KAAK,CAACC,UAAU,CAAC,MAAM,CAAC,EAAE;MAClD;MACA,MAAMC,IAAI,GAAGF,KAAK,CAACC,UAAU,CAAC,GAAG,CAAC,GAAGD,KAAK,GAAG,IAAIA,KAAK,EAAE;MACxDJ,QAAQ,CAAC,GAAGC,QAAQ,GAAGK,IAAI,EAAE,CAAC;IAChC,CAAC,MAAM;MACLN,QAAQ,CAACI,KAAK,CAAC;IACjB;EACF,CAAC;EAED,oBACEP,OAAA;IAAKU,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCX,OAAA;MACEY,IAAI,EAAC,MAAM;MACXF,SAAS,EAAC,WAAW;MACrBG,WAAW,EAAER,cAAc,CAAC,CAAE;MAC9BE,KAAK,EAAEL,GAAI;MACXC,QAAQ,EAAGW,CAAC,IAAKR,eAAe,CAACQ,CAAC,CAACC,MAAM,CAACR,KAAK;IAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,EACDf,QAAQ,iBACPJ,OAAA;MAAKU,SAAS,EAAC,qBAAqB;MAAAC,QAAA,GAAC,mBAC5B,EAACP,QAAQ;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACC,EAAA,GAnCInB,QAAQ;AAqCd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}