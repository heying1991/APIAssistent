{"ast":null,"code":"var _jsxFileName = \"/Users/heying/Desktop/Postman/src/components/BodyTab.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSettings } from '../context/SettingsContext';\nimport { getTranslation } from '../locales/translations';\nimport './BodyTab.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BodyTab = ({\n  body,\n  bodyType,\n  onChange\n}) => {\n  _s();\n  const {\n    language\n  } = useSettings();\n  const handleBodyChange = newBody => {\n    onChange(newBody, bodyType);\n  };\n  const handleTypeChange = newType => {\n    onChange(body, newType);\n  };\n  const getPlaceholder = () => {\n    switch (bodyType) {\n      case 'json':\n        return `{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"age\": 30\n}`;\n      case 'form':\n        return `name=John Doe&email=john@example.com&age=30`;\n      case 'xml':\n        return `<user>\n  <name>John Doe</name>\n  <email>john@example.com</email>\n  <age>30</age>\n</user>`;\n      default:\n        return language === 'zh' ? '输入请求体内容...' : 'Enter request body content...';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body-tab\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: getTranslation(language, 'body')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-type-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: language === 'zh' ? '类型:' : 'Type:'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: bodyType,\n          onChange: e => handleTypeChange(e.target.value),\n          className: \"body-type-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"json\",\n            children: \"JSON\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"form\",\n            children: \"Form Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"xml\",\n            children: \"XML\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"text\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-content\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"body-textarea\",\n        placeholder: getPlaceholder(),\n        value: body,\n        onChange: e => handleBodyChange(e.target.value),\n        rows: 15\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-templates\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: language === 'zh' ? '请求体模板' : 'Body Templates'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"template-buttons\",\n        children: [bodyType === 'json' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn template-btn\",\n            onClick: () => handleBodyChange(`{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"age\": 30,\n  \"active\": true\n}`),\n            children: language === 'zh' ? '用户数据' : 'User Data'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn template-btn\",\n            onClick: () => handleBodyChange(`{\n  \"title\": \"New Post\",\n  \"content\": \"This is the content of the post\",\n  \"tags\": [\"tech\", \"programming\"],\n  \"published\": false\n}`),\n            children: language === 'zh' ? '文章数据' : 'Post Data'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), bodyType === 'form' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn template-btn\",\n            onClick: () => handleBodyChange('name=John Doe&email=john@example.com&age=30'),\n            children: language === 'zh' ? '用户表单' : 'User Form'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn template-btn\",\n            onClick: () => handleBodyChange('title=New Post&content=Post content&published=false'),\n            children: language === 'zh' ? '文章表单' : 'Post Form'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), bodyType === 'xml' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn template-btn\",\n            onClick: () => handleBodyChange(`<user>\n  <name>John Doe</name>\n  <email>john@example.com</email>\n  <age>30</age>\n</user>`),\n            children: language === 'zh' ? '用户XML' : 'User XML'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(BodyTab, \"gGNJZxUrOmAVZqstj8h/kYHglMk=\", false, function () {\n  return [useSettings];\n});\n_c = BodyTab;\nexport default BodyTab;\nvar _c;\n$RefreshReg$(_c, \"BodyTab\");","map":{"version":3,"names":["React","useSettings","getTranslation","jsxDEV","_jsxDEV","Fragment","_Fragment","BodyTab","body","bodyType","onChange","_s","language","handleBodyChange","newBody","handleTypeChange","newType","getPlaceholder","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","e","target","placeholder","rows","onClick","_c","$RefreshReg$"],"sources":["/Users/heying/Desktop/Postman/src/components/BodyTab.js"],"sourcesContent":["import React from 'react';\nimport { useSettings } from '../context/SettingsContext';\nimport { getTranslation } from '../locales/translations';\nimport './BodyTab.css';\n\nconst BodyTab = ({ body, bodyType, onChange }) => {\n  const { language } = useSettings();\n\n  const handleBodyChange = (newBody) => {\n    onChange(newBody, bodyType);\n  };\n\n  const handleTypeChange = (newType) => {\n    onChange(body, newType);\n  };\n\n  const getPlaceholder = () => {\n    switch (bodyType) {\n      case 'json':\n        return `{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"age\": 30\n}`;\n      case 'form':\n        return `name=John Doe&email=john@example.com&age=30`;\n      case 'xml':\n        return `<user>\n  <name>John Doe</name>\n  <email>john@example.com</email>\n  <age>30</age>\n</user>`;\n      default:\n        return language === 'zh' ? '输入请求体内容...' : 'Enter request body content...';\n    }\n  };\n\n  return (\n    <div className=\"body-tab\">\n      <div className=\"body-header\">\n        <h3>{getTranslation(language, 'body')}</h3>\n        <div className=\"body-type-selector\">\n          <label>{language === 'zh' ? '类型:' : 'Type:'}</label>\n          <select \n            value={bodyType} \n            onChange={(e) => handleTypeChange(e.target.value)}\n            className=\"body-type-select\"\n          >\n            <option value=\"json\">JSON</option>\n            <option value=\"form\">Form Data</option>\n            <option value=\"xml\">XML</option>\n            <option value=\"text\">Text</option>\n          </select>\n        </div>\n      </div>\n\n      <div className=\"body-content\">\n        <textarea\n          className=\"body-textarea\"\n          placeholder={getPlaceholder()}\n          value={body}\n          onChange={(e) => handleBodyChange(e.target.value)}\n          rows={15}\n        />\n      </div>\n\n      <div className=\"body-templates\">\n        <h4>{language === 'zh' ? '请求体模板' : 'Body Templates'}</h4>\n        <div className=\"template-buttons\">\n          {bodyType === 'json' && (\n            <>\n              <button\n                className=\"btn template-btn\"\n                onClick={() => handleBodyChange(`{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"age\": 30,\n  \"active\": true\n}`)}\n              >\n                {language === 'zh' ? '用户数据' : 'User Data'}\n              </button>\n              <button\n                className=\"btn template-btn\"\n                onClick={() => handleBodyChange(`{\n  \"title\": \"New Post\",\n  \"content\": \"This is the content of the post\",\n  \"tags\": [\"tech\", \"programming\"],\n  \"published\": false\n}`)}\n              >\n                {language === 'zh' ? '文章数据' : 'Post Data'}\n              </button>\n            </>\n          )}\n          {bodyType === 'form' && (\n            <>\n              <button\n                className=\"btn template-btn\"\n                onClick={() => handleBodyChange('name=John Doe&email=john@example.com&age=30')}\n              >\n                {language === 'zh' ? '用户表单' : 'User Form'}\n              </button>\n              <button\n                className=\"btn template-btn\"\n                onClick={() => handleBodyChange('title=New Post&content=Post content&published=false')}\n              >\n                {language === 'zh' ? '文章表单' : 'Post Form'}\n              </button>\n            </>\n          )}\n          {bodyType === 'xml' && (\n            <>\n              <button\n                className=\"btn template-btn\"\n                onClick={() => handleBodyChange(`<user>\n  <name>John Doe</name>\n  <email>john@example.com</email>\n  <age>30</age>\n</user>`)}\n              >\n                {language === 'zh' ? '用户XML' : 'User XML'}\n              </button>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BodyTab; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}